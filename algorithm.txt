
//BUBBLE SORT 
function sort(arr){
  for(var i=0;i<arr.length;i++){
    if(arr[i]>arr[i+1]){
    var temp=arr[i];
    arr[i]=arr[i+1];
    arr[i+1]=temp;
    }
     
  }
 return arr;

}
console.log(sort([1,5,2,3]));

//INSERTATION SORT
function Sort(arr)
{
  for (var i = 1; i < arr.length; i++) 
  {
 if (arr[i] < arr[0]) 
 {
 arr.unshift(arr.splice(i,1)[0]);
 } 
  else if (arr[i] > arr[i-1]) 
{ continue;
} 
 else {
      for (var j = 1; j < i; j++) {
        if (arr[i] > arr[j-1] && arr[i] < arr[j])  {
 arr.splice(j,0,arr.splice(i,1)[0]);
    }
    }
    }
  }return arr;
}


//QUICK sORT

function Sort(arr)
 {
if (arr.length <= 1) return arr;
var left = [];
var right = [];
var newArray = [];
var pivot = arr.reverse().pop();
for (i = 0; i < arr.length; i++) {
if (arr[i] <= pivot) {
left.push(arr[i]);
} else {
right.push(arr[i]);
}
}
return newArray.concat(Sort(left), pivot, Sort(right));
}
console.log(Sort([6,12,5,7,2,0]));

//MERGE SORT

 var middle = Math.floor(items.length / 2)
 function merge_sort(left,right) 
{var i = 0;
	var j = 0;
	var results = [];
while (i < left.length || j < right.length)
   {
if (i == left.length) {
results.push(right[j]);
j++;
		} 
 else if (j == right.length || left[i] <= right[j]) {
results.push(left[i]);
i++;
} else
     {
results.push(right[j]);
j++;
}
}
return results;
}

console.log(merge_sort([1,3,4],[10,7,9]));
console.log(Sort([8,18,3,5,23,0]));
